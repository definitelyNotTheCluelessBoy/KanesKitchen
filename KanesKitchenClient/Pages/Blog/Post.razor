@page "/post/{id:int}"
@using System.Security.Claims
@using SharedLibrary.DTOs.Blog
@inject NavigationManager NavigationManager
@inject IPostService PostService
@inject ICommentService CommentService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IStringLocalizer<PostResource> resource

@if (post == null)
{
    <p>Loading post...</p>
}
else
{
    <div class="container mt-4">
        <!-- Post Details -->
        <div class="card mb-4">
            <div class="card-body">
                <div>
                    <small class="text-muted">@post.UserName</small>
                </div>
                <div class="d-flex justify-content-between align-items-center mt-2">
                    <h3 class="mb-0">@post.Title</h3>
                    @if (post.UserId == currentUserId || isAdmin)
                    {
                        <button class="btn btn-sm btn-secondary" @onclick="NavigateToEditPost">@resource["Modify"]</button>
                    }
                </div>
                <div class="mt-3">
                    <p>@post.Content</p>
                </div>
            </div>
        </div>

        <!-- Create Comment Button -->
        <AuthorizeView>
            <Authorized>
                <div class="mb-3">
                    <button class="btn btn-primary" @onclick="NavigateToCreateComment">@resource["CreateCommentButton"]</button>
                </div>
            </Authorized>
        </AuthorizeView>

        <!-- Comments Section -->
        <div class="card">
            <div class="card-header">
                <h4 class="mb-0">@resource["Comments"]</h4>
            </div>
            <div class="card-body">
                @if (comments == null)
                {
                    <p>Loading comments...</p>
                }
                else if (comments.Count == 0)
                {
                    <p>No comments yet.</p>
                }
                else
                {
                    @foreach (var comment in comments)
                    {
                        <div class="mb-3 border-bottom pb-2">
                            <div>
                                <small class="text-muted">@comment.UserName</small>
                            </div>
                            <div>
                                <p class="mb-1">@comment.Content</p>
                            </div>
                            @if (comment.UserId == currentUserId || isAdmin)
                            {
                                <div>
                                    <button class="btn btn-sm btn-secondary" @onclick="() => NavigateToEditComment(comment.Id)">@resource["Modify"]</button>
                                </div>
                            }
                        </div>
                    }
                }
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int id { get; set; }

    private GetPostDto? post;
    private List<GetCommentDto>? comments;
    private int currentUserId;
    private string userRole;
    private bool isAdmin;

    protected override async Task OnInitializedAsync()
    {

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated ?? false)
        {
            userRole = user.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value;
            currentUserId = int.Parse(user.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier)?.Value);
        }
        else
        {
            userRole = "Guest";
            currentUserId = 0;
        }

        isAdmin = (userRole == "Admin");


        post = await PostService.GetPostAsync(id);
        comments = post.Comments;
    }

    private void NavigateToEditPost()
    {
        NavigationManager.NavigateTo($"/modify-post/{id}");
    }

    private void NavigateToEditComment(int commentId)
    {
        NavigationManager.NavigateTo($"/modify-comment/{commentId}");
    }

    private void NavigateToCreateComment()
    {
        NavigationManager.NavigateTo($"/create-comment/{id}");
    }
}

