@page "/modify-product/{ProductId:int}"

@inject NavigationManager NavigationManager

<h3 class="mb-4">Modify Product</h3>

<div class="card shadow-sm mb-4" style="max-width: 700px;">
    <div class="card-body">
        <EditForm Model="_product" OnValidSubmit="HandleValidSubmit" class="row g-3">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />

            <!-- Product Name -->
            <div class="col-md-6">
                <label class="form-label fw-bold">Product Name</label>
                <InputText @bind-Value="_product.ProductName" class="form-control" />
            </div>

            <div class="col-md-6">
                <label class="form-label fw-bold">Product Name (SVK)</label>
                <InputText @bind-Value="_product.ProductNameSvk" class="form-control" />
            </div>

            <!-- Descriptions -->
            <div class="col-md-6">
                <label class="form-label fw-bold">Description</label>
                <InputTextArea @bind-Value="_product.ProductDescription" class="form-control" rows="3" />
            </div>

            <div class="col-md-6">
                <label class="form-label fw-bold">Description (SVK)</label>
                <InputTextArea @bind-Value="_product.ProductDescriptionSvk" class="form-control" rows="3" />
            </div>

            <!-- Category Dropdown -->
            <div class="col-md-6">
                <label class="form-label fw-bold">Category</label>
                <InputSelect @bind-Value="_product.ProductCategoryId" class="form-select">
                    <option value="">-- Choose Category --</option>
                    @foreach (var cat in _categories)
                    {
                        <option value="@cat.Id">@cat.CategoryName (@cat.CategoryNameSvk)</option>
                    }
                </InputSelect>
            </div>

            <!-- Price -->
            <div class="col-md-3">
                <label class="form-label fw-bold">Price</label>
                <InputNumber @bind-Value="_product.ProductPrice" class="form-control" />
            </div>

            <!-- Stock -->
            <div class="col-md-3">
                <label class="form-label fw-bold">Stock</label>
                <InputNumber @bind-Value="_product.ProductStock" class="form-control" />
            </div>

            <!-- Action Buttons -->
            <div class="col-12 mt-3 d-flex justify-content-between">
                <button type="submit" class="btn btn-primary">Update Product</button>
                <button type="button" class="btn btn-danger" @onclick="HandleDelete">Delete Product</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public int ProductId { get; set; }

    // Reuse your product DTO (or use a dedicated UpdateProductDto)
    private UpdateProductDto _product = new UpdateProductDto();

    private List<ProductCategory> _categories = new();
    private string _statusMessage;

    protected override async Task OnInitializedAsync()
    {
        // Preload the product details using the provided ProductId
        _product = await ProductService.GetProductByIdForUpdateAsync(ProductId);
        _categories = await ProductService.GetAllCategoriesAsync();
    }

    private async Task HandleValidSubmit()
    {
        _statusMessage = string.Empty;

        // Update the product via your service
        var result = await ProductService.UpdateProductAsync(ProductId, _product);
        _statusMessage = $"Product update complete with result: {result}";
    }

    private async Task HandleDelete()
    {
        // Optional confirmation dialog
        bool confirm = await JS.InvokeAsync<bool>("confirm", $"Are you sure you want to delete '{_product.ProductName}'?");
        if (confirm)
        {
            var result = await ProductService.DeleteProductByIdAsync(ProductId);
            if (result.StatusCode == System.Net.HttpStatusCode.OK)
            {
                _statusMessage = "Product deleted successfully.";
                NavigationManager.NavigateTo("/products"); // Redirect to product list (or desired page) after deletion
            }
            else
            {
                _statusMessage = "Failed to delete the product.";
            }
        }
    }
}
